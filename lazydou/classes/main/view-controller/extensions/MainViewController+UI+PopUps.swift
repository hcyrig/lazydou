//
//  MainViewController+PopUps.swift
//

import AppKit

public var Experiences: [(title: String, value: String)] = [
  
  ("Any Experience", ""),
  ("0-1", "0-1"),
  ("1-3", "1-3"),
  ("3-5", "3-5"),
  ("5+", "5plus")
]

public var Cities: [String] = [
  
  "All Cities",
  "–•–∞—Ä–∫—ñ–≤",
  "–ö–∏—ó–≤",
  "–õ—å–≤—ñ–≤",
  "–û–¥–µ—Å–∞",
  "–í—ñ–Ω–Ω–∏—Ü—è",
  "–î–Ω—ñ–ø—Ä–æ",
  "–£–∂–≥–æ—Ä–æ–¥",
  "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫",
  "–ß–µ—Ä–Ω—ñ–≤—Ü—ñ",
  "–ß–µ—Ä–Ω—ñ–≥—ñ–≤",
  "–õ—É—Ü—å–∫",
  "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π",
  "–ü–æ–ª—Ç–∞–≤–∞",
  "–ß–µ—Ä–∫–∞—Å–∏",
  "–ú–∏–∫–æ–ª–∞—ó–≤",
  "–ö—Ä–µ–º–µ–Ω—á—É–∫",
  "–†—ñ–≤–Ω–µ",
  "–°—É–º–∏",
  "–ñ–∏—Ç–æ–º–∏—Ä",
  "–ó–∞–ø–æ—Ä—ñ–∂–∂—è",
  "–¢–µ—Ä–Ω–æ–ø—ñ–ª—å",
  "–•–µ—Ä—Å–æ–Ω",
  "–ö—Ä–æ–ø–∏–≤–Ω–∏—Ü—å–∫–∏–π",
  "–ú–∞—Ä—ñ—É–ø–æ–ª—å",
  "–≤—ñ–¥–¥–∞–ª–µ–Ω–∞ —Ä–æ–±–æ—Ç–∞",
  "üöú –∑–∞ –∫–æ—Ä–¥–æ–Ω–æ–º"
]

public var Categories: [String] = [
  
  "All Categories",
  ".NET",
  "1–°",
  "Analyst",
  "Android",
  "Animator",
  "Architect",
  "Artist",
  "Big Data",
  "Blockchain",
  "C++",
  "Data Science",
  "DBA",
  "Design",
  "DevOps",
  "Embedded",
  "ERP/CRM",
  "Finances",
  "Flutter",
  "Front End",
  "Golang",
  "HR",
  "iOS/macOS",
  "Java",
  "Legal",
  "Marketing",
  "Node.js",
  "Office Manager",
  "Other",
  "PHP",
  "Product Manager",
  "Project Manager",
  "Python",
  "QA",
  "React Native",
  "Ruby",
  "Rust",
  "Sales",
  "Salesforce",
  "Scala",
  "Scrum Master",
  "Security",
  "SEO",
  "Support",
  "SysAdmin",
  "Technical Writer",
  "Unity",
  "Unreal Engine"
]

extension MainViewController {
  
  public func setupPopUpsLists() {
    
    cityPopUp.addItems(withTitles: Cities)
    cityPopUp.target = self
    cityPopUp.action = #selector(cityButtonAction(_:))
    cityPopUp.selectItem(withTitle: Cities.first!)
    
    categoryPopUp.addItems(withTitles: Categories)
    categoryPopUp.target = self
    categoryPopUp.action = #selector(categoryButtonAction(_:))
    categoryPopUp.selectItem(withTitle: Categories.first!)
    
    experiencesPopUp.addItems(withTitles: Experiences.compactMap({ $0.title }))
    experiencesPopUp.target = self
    experiencesPopUp.action = #selector(experiencesButtonAction(_:))
    experiencesPopUp.selectItem(withTitle: Experiences.first!.title)
  }
}
